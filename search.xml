<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>英语复习短文第一周</title>
      <link href="/2025/01/19/English%20Learning/%E7%AC%AC%E4%B8%80%E5%91%A8/"/>
      <url>/2025/01/19/English%20Learning/%E7%AC%AC%E4%B8%80%E5%91%A8/</url>
      
        <content type="html"><![CDATA[<p>20250119-20250126</p><h1 id="section">0119</h1><blockquote><p>jury、pathetic、couch、council、spoil、billion、regiment、corporate、expanse、savage、fuss、conceal、evacuate、pressconference、elaborate、mute、altitude、render、courier、substantial、conceive、intuition、plaster、catastrophe、dwarf、defect、humility、frown、prevail、strategic、oblige、poll、precedent、drastic、premier、enchanting、unanimous、blur、cuisine、component、prompt、delegate、disclosure、oily、derive、advisable、appliance、intermediate、conservation、preface、dignify、penchant、inflame、populate、stationer、swell、barrel、intact、trillion、robbery、affective、brace、illiterate、ingenuous、justifiable</p></blockquote><p>In a <strong>press conference</strong>, the <strong>jury</strong>listened attentively as the <strong>council</strong> discussed the<strong>pathetic</strong> state of the city's infrastructure. Theypromised not to <strong>spoil</strong> the <strong>substantial</strong>funds allocated for repairs, which amounted to nearly a<strong>billion</strong> dollars. The <strong>corporate</strong>sponsors had agreed to <strong>evacuate</strong> their offices duringrenovations, showing a <strong>strategic</strong> partnership.</p><p>Amid the <strong>fuss</strong>, an <strong>elaborate</strong> planwas unveiled to <strong>conceal</strong> the construction sites withartistic designs. The <strong>premier</strong> of the city, known forhis <strong>intuition</strong>, believed this would<strong>render</strong> the streets more <strong>enchanting</strong>.Meanwhile, a <strong>courier</strong> delivered important documents,ensuring everything remained <strong>intact</strong>.</p><p>The <strong>expanse</strong> of the project was daunting, but the<strong>unanimous</strong> vote of the <strong>council</strong> gaveeveryone hope. The <strong>regiment</strong> of workers, with their<strong>humility</strong>, began their tasks with<strong>dignify</strong>ing dedication. They used<strong>plaster</strong> to repair walls, aware that any<strong>defect</strong> could lead to a<strong>catastrophe</strong>.</p><p>One <strong>delegate</strong> expressed concerns about the<strong>drastic</strong> changes, fearing they might<strong>blur</strong> the city's historic charm. However, the<strong>poll</strong> results showed that citizens were<strong>oblige</strong>d to support the initiative, considering it<strong>advisable</strong> for long-term growth.</p><p>The <strong>stationer</strong> nearby saw a <strong>swell</strong> inbusiness, selling supplies to the workers. Even the local<strong>cuisine</strong> adapted, offering <strong>oily</strong> butdelicious meals to sustain the laborers. The project was a<strong>component</strong> of a larger vision to<strong>populate</strong> the area with new businesses.</p><p>Despite the <strong>robbery</strong> of some materials, the teamremained <strong>intact</strong>. Their <strong>penchant</strong> forovercoming challenges was <strong>justifiable</strong>, driven by an<strong>affective</strong> commitment to the community. They used<strong>brace</strong>s to support old structures, ensuring nothing wasleft <strong>mute</strong> or forgotten.</p><p>In the end, the <strong>precedent</strong> set by this project wasone of <strong>conservation</strong> and growth. It was a<strong>justifiable</strong> success, with the city's<strong>altitude</strong> of progress reaching new heights. The<strong>premier</strong>'s <strong>ingenuous</strong> leadership had<strong>inflame</strong>d a spirit of renewal, proving that with<strong>strategic</strong> planning and <strong>humility</strong>, eventhe most <strong>pathetic</strong> situations could<strong>prevail</strong>.</p><p>在一次<strong>新闻发布会</strong>上，<strong>陪审团</strong>认真听取了<strong>委员会</strong>关于城市基础设施<strong>可悲</strong>状况的讨论。他们承诺不会<strong>浪费</strong>这笔近<strong>十亿</strong>美元的<strong>可观</strong>资金。<strong>企业</strong>赞助商同意在翻修期间<strong>撤离</strong>他们的办公室，展示了一种<strong>战略</strong>合作关系。</p><p>在<strong>大惊小怪</strong>中，一个<strong>精心</strong>设计的计划被公布，旨在用艺术设计<strong>掩盖</strong>施工现场。以<strong>直觉</strong>著称的城市<strong>首相</strong>相信这会使街道更加<strong>迷人</strong>。与此同时，一名<strong>快递员</strong>送来了重要文件，确保一切保持<strong>完整</strong>。</p><p>项目的<strong>广度</strong>令人望而生畏，但<strong>委员会</strong>的<strong>一致</strong>投票给了大家希望。<strong>团</strong>工人们以他们的<strong>谦逊</strong>开始工作，展示了<strong>高贵</strong>的奉献精神。他们用<strong>灰泥</strong>修补墙壁，知道任何<strong>缺陷</strong>都可能导致<strong>灾难</strong>。</p><p>一位<strong>代表</strong>表达了对<strong>激烈</strong>变化的担忧，担心它们可能<strong>模糊</strong>城市的历史魅力。然而，<strong>民意调查</strong>结果显示，市民们<strong>不得不</strong>支持这一倡议，认为这对长期发展是<strong>明智的</strong>。</p><p>附近的<strong>文具店</strong>生意<strong>膨胀</strong>，向工人出售供应品。甚至当地的<strong>美食</strong>也做出了调整，提供<strong>油腻</strong>但美味的餐点，以维持工人的体力。该项目是一个更大愿景的<strong>组成部分</strong>，旨在用新业务<strong>填充</strong>该地区。</p><p>尽管有些材料被<strong>抢劫</strong>，但团队仍然<strong>完整</strong>。他们克服挑战的<strong>嗜好</strong>是<strong>正当的</strong>，受到对社区的<strong>情感</strong>承诺的驱动。他们使用<strong>支架</strong>支撑旧结构，确保没有东西被<strong>静音</strong>或遗忘。</p><p>最终，该项目所设立的<strong>先例</strong>是保护和增长的。它是一个<strong>正当的</strong>成功，城市的<strong>高度</strong>进步达到了新的高度。<strong>首相</strong>的<strong>天真</strong>领导燃起了更新的精神，证明通过<strong>战略</strong>规划和<strong>谦逊</strong>，即使是最<strong>可悲</strong>的情况也能<strong>战胜</strong>。</p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习短文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo部署twikoo功能时MongoDB报错：tlsv1 alert internal error</title>
      <link href="/2025/01/07/Hexo/Error/2/"/>
      <url>/2025/01/07/Hexo/Error/2/</url>
      
        <content type="html"><![CDATA[<p>如下所示：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">{</span><br><span class="line">    "code": 1000,</span><br><span class="line">    "message": "80D8C13E607F0000:error:0A000438:SSL routines:ssl3_read_bytes:tlsv1 alert internal error:ssl/record/rec_layer_s3.c:907:SSL alert number 80\n"</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>这个是使用SSL/TLS连接的时候出现了错误，之后我发现是MongoDB防火墙的问题<sub>（虽然我记得初始化的时候命明明设置了0.0.0.0/0的，但不知道为什么没设置成功）</sub></p><p><strong>解决步骤</strong>：进入MongoDB面板-左侧选择<code>Network Access</code>-点击右侧<code>ADD IP ADDRESS</code>-添加<code>0.0.0.0/0</code>即可</p><p>这是再重新访问MongoDB即恢复正常：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">{</span><br><span class="line">    "code": 100,</span><br><span class="line">    "message": "Twikoo 云函数运行正常，请参考 https://twikoo.js.org/frontend.html 完成前端的配置",</span><br><span class="line">    "version": "1.6.41"</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> twikoo </tag>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于这个小站</title>
      <link href="/2025/01/05/about/"/>
      <url>/2025/01/05/about/</url>
      
        <content type="html"><![CDATA[<p>施工中……</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly魔改5：在网站底部添加建站时间</title>
      <link href="/2025/01/05/Hexo/Butterfly/Custom/5/"/>
      <url>/2025/01/05/Hexo/Butterfly/Custom/5/</url>
      
        <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>看<a href="https://butterfly.js.org/posts/4aa8abbe/?highlight=anchor#%E8%A8%AA%E5%95%8F%E4%BA%BA%E6%95%B8-busuanzi-UV-%E5%92%8C-PV">官方文档的时候</a>，明明busuanzi是有个“网站已运行时间的”，但是这里就没有。那就自己弄一个吧，这玩意儿看着感觉还是挺有成就感的。</p><h1 id="步骤">步骤</h1><p>在 <code>\themes\butterfly\layout\includes\footer.pug</code>的最后添加如下代码即可：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// Add the time calculation script</span><br><span class="line">div</span><br><span class="line">span#timeDate 载入天数...</span><br><span class="line">span#times 载入时分秒...</span><br><span class="line">script.</span><br><span class="line">    var now = new Date(); </span><br><span class="line">    function createtime() { </span><br><span class="line">    var grt = new Date("1/2/2025 21:36"); // 在此处修改你的建站时间</span><br><span class="line">    now.setTime(now.getTime() + 250); </span><br><span class="line">    days = (now - grt) / 1000 / 60 / 60 / 24; </span><br><span class="line">    dnum = Math.floor(days); </span><br><span class="line">    hours = (now - grt) / 1000 / 60 / 60 - (24 * dnum); </span><br><span class="line">    hnum = Math.floor(hours); </span><br><span class="line">    if (String(hnum).length == 1) { hnum = "0" + hnum; } </span><br><span class="line">    minutes = (now - grt) / 1000 / 60 - (24 * 60 * dnum) - (60 * hnum); </span><br><span class="line">    mnum = Math.floor(minutes); </span><br><span class="line">    if (String(mnum).length == 1) { mnum = "0" + mnum; } </span><br><span class="line">    seconds = (now - grt) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); </span><br><span class="line">    snum = Math.round(seconds); </span><br><span class="line">    if (String(snum).length == 1) { snum = "0" + snum; } </span><br><span class="line">    document.getElementById("timeDate").innerHTML = "本网站已运行 " + dnum + " 天 "; </span><br><span class="line">    document.getElementById("times").innerHTML = hnum + " 小时 " + mnum + " 分 " + snum + " 秒"; </span><br><span class="line">    } </span><br><span class="line">    setInterval(createtime, 250);</span><br></pre></td></tr></table></figure><p>不想要显示“秒”的话：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">div</span><br><span class="line">  span#timeDate 载入天数...</span><br><span class="line">  span#times 载入时分...</span><br><span class="line">  script.</span><br><span class="line">    var now = new Date(); </span><br><span class="line">    function createtime() { </span><br><span class="line">      var grt = new Date("1/2/2025 21:36"); // 在此处修改你的建站时间</span><br><span class="line">      now.setTime(now.getTime() + 250); </span><br><span class="line">      days = (now - grt) / 1000 / 60 / 60 / 24; </span><br><span class="line">      dnum = Math.floor(days); </span><br><span class="line">      hours = (now - grt) / 1000 / 60 / 60 - (24 * dnum); </span><br><span class="line">      hnum = Math.floor(hours); </span><br><span class="line">      if (String(hnum).length == 1) { hnum = "0" + hnum; } </span><br><span class="line">      minutes = (now - grt) / 1000 / 60 - (24 * 60 * dnum) - (60 * hnum); </span><br><span class="line">      mnum = Math.floor(minutes); </span><br><span class="line">      if (String(mnum).length == 1) { mnum = "0" + mnum; } </span><br><span class="line">      document.getElementById("timeDate").innerHTML = "本网站已运行 " + dnum + " 天 "; </span><br><span class="line">      document.getElementById("times").innerHTML = hnum + " 小时 " + mnum + " 分"; </span><br><span class="line">    } </span><br><span class="line">    setInterval(createtime, 250);</span><br></pre></td></tr></table></figure></p><p>只想显示“天”的话：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">div</span><br><span class="line">  span#timeDate 载入天数...</span><br><span class="line">  script.</span><br><span class="line">    var now = new Date(); </span><br><span class="line">    function createtime() { </span><br><span class="line">      var grt = new Date("1/2/2025 21:36"); // 在此处修改你的建站时间</span><br><span class="line">      now.setTime(now.getTime() + 250); </span><br><span class="line">      days = (now - grt) / 1000 / 60 / 60 / 24; </span><br><span class="line">      dnum = Math.floor(days); </span><br><span class="line">      document.getElementById("timeDate").innerHTML = "本网站已运行 " + dnum + " 天"; </span><br><span class="line">    } </span><br><span class="line">    setInterval(createtime, 250);</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly魔改准备工作：文件管理魔改代码</title>
      <link href="/2025/01/04/Hexo/Butterfly/Custom/0/"/>
      <url>/2025/01/04/Hexo/Butterfly/Custom/0/</url>
      
        <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>对于一些全局的改变，我们可以用文件来管理更方便。</p><h1 id="步骤">步骤</h1><ol type="1"><li>在 <code>\themes\butterfly\source\css</code> 目录下添加<code>custom.css</code> 文件</li><li>在 <code>\themes\butterfly\source\js</code> 目录下添加<code>custom.js</code> 文件</li><li>在内层 <code>_config.yml</code> 文件中搜索 <code>inject</code>或者直接在外层 <code>_config.butterfly.yml</code>文件中添加如下代码即可：</li></ol><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Inject</span></span><br><span class="line"><span class="comment"># Insert the code to head (before '&lt;/head&gt;' tag) and the bottom (before '&lt;/body&gt;' tag)</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel="stylesheet"</span> <span class="string">href="/css/custom.css"&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src="/js/custom.js"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>之后，对于一些全局的修改都可以在 <code>custom.css</code> 和<code>custom.js</code> 中编辑，这样管理和更新的时候方便些。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly魔改4：自动检测深色/浅色模式</title>
      <link href="/2025/01/04/Hexo/Butterfly/Custom/4/"/>
      <url>/2025/01/04/Hexo/Butterfly/Custom/4/</url>
      
        <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>添加功能：根据系统的深色/浅色模式，自动切换网站的深色/浅色模式。</p><h1 id="方法1">方法1</h1><p>在 <code>\themes\butterfly\layout\includes\head.pug</code>的最后添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">script.</span><br><span class="line">  function updateTheme() {</span><br><span class="line">    const isDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;</span><br><span class="line">    document.documentElement.setAttribute('data-theme', isDarkMode ? 'dark' : 'light');</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  // 初始设置</span><br><span class="line">  updateTheme();</span><br><span class="line"></span><br><span class="line">  // 监听系统主题变化</span><br><span class="line">  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', updateTheme);</span><br></pre></td></tr></table></figure><h1 id="方法2推荐">方法2（推荐）</h1><p>先跟着<a href="https://diraw.top/2025/01/04/Hexo/Butterfly/Custom/0/">Butterfly魔改准备工作：文件管理魔改代码</a>完成准备。</p><p>在 <code>custom.js</code> 最后（最外层）直接添加如下代码即可，也就是<code>.pug</code> 文件去掉最前面的 <code>script.</code> 即可：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">updateTheme</span>(<span class="params"></span>) {</span><br><span class="line">  <span class="keyword">const</span> isDarkMode = <span class="variable language_">window</span>.<span class="title function_">matchMedia</span>(<span class="string">'(prefers-color-scheme: dark)'</span>).<span class="property">matches</span>;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="title function_">setAttribute</span>(<span class="string">'data-theme'</span>, isDarkMode ? <span class="string">'dark'</span> : <span class="string">'light'</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始设置</span></span><br><span class="line"><span class="title function_">updateTheme</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听系统主题变化</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">matchMedia</span>(<span class="string">'(prefers-color-scheme: dark)'</span>).<span class="title function_">addEventListener</span>(<span class="string">'change'</span>, updateTheme);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly魔改3：修改副标题字体大小</title>
      <link href="/2025/01/03/Hexo/Butterfly/Custom/3/"/>
      <url>/2025/01/03/Hexo/Butterfly/Custom/3/</url>
      
        <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>众所周知，Butterfly在可以在 <code>_config.yml</code> 中用<code>font</code> 配置全局的字体和代码大小，如下图所示：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Global font settings</span></span><br><span class="line"><span class="comment"># Don't modify the following settings unless you know how they work</span></span><br><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">global_font_size:</span> <span class="string">16px</span></span><br><span class="line">  <span class="attr">code_font_size:</span> <span class="string">16px</span></span><br><span class="line">  <span class="attr">font_family:</span></span><br><span class="line">  <span class="attr">code_font_family:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Font settings for the site title and site subtitle</span></span><br><span class="line"><span class="attr">blog_title_font:</span></span><br><span class="line">  <span class="attr">font_link:</span></span><br><span class="line">  <span class="attr">font_family:</span></span><br></pre></td></tr></table></figure><p>但是一些更精细的调整就没有了。就比如我把全局大小设置成16px之后，我感觉我首页的副标题的中文字体有点大了，我想改小一点。</p><h1 id="步骤">步骤</h1><p>在 <code>\themes\butterfly\layout\includes\header\index.pug</code>中搜索 <code>site-subtitle</code> 可以找到：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#site-subtitle</span><br><span class="line">    span#subtitle</span><br></pre></td></tr></table></figure><p>添加 <code>(style="font-size: 22px;")</code> 即可，如下图所示：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#site-subtitle(style="font-size: 22px;")</span><br><span class="line">    span#subtitle</span><br></pre></td></tr></table></figure><p>改之前：<br><img src="/img/202501/6.png" alt="Image 6"></p><p>改之后：<br><img src="/img/202501/7.png" alt="Image 7"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly魔改2：页面渐变切换</title>
      <link href="/2025/01/03/Hexo/Butterfly/Custom/2/"/>
      <url>/2025/01/03/Hexo/Butterfly/Custom/2/</url>
      
        <content type="html"><![CDATA[<h1 id="准备工作">准备工作</h1><p>这边使用Pjax来实现页面的动画。Butterfly内置了Pjax插件，直接在<code>/themes/butterfly/_config.yml</code> 中搜索Pjax，然后把<code>enable</code> 选项改成 <code>true</code>，如下所示：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># https://github.com/MoOx/pjax</span></span><br><span class="line"><span class="attr">pjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Exclude the specified pages from pjax, such as '/music/'</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="comment"># - /xxxxxx/</span></span><br></pre></td></tr></table></figure><h1 id="步骤">步骤</h1><p>首先，在 <code>/themes/butterfly/source/css</code> 下创建<code>custom.css</code> 写入如下代码：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 默认（白天模式） */</span></span><br><span class="line"><span class="selector-tag">body</span> {</span><br><span class="line">  <span class="attribute">background-color</span>: white;</span><br><span class="line">  <span class="attribute">color</span>: black;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">"dark"</span>]</span> <span class="selector-tag">body</span> {</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#121212</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pjax-leave-active</span> {</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: inherit;</span><br><span class="line">  <span class="comment">/* 使用继承的背景色 */</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pjax-enter-active</span> {</span><br><span class="line">  <span class="attribute">transition</span>: opacity <span class="number">1s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.22</span>, <span class="number">0.61</span>, <span class="number">0.36</span>, <span class="number">1</span>), background-color <span class="number">1s</span> ease-in-out, transform <span class="number">1s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: inherit;</span><br><span class="line">  <span class="comment">/* 使用继承的背景色 */</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>然后，在 <code>/themes/butterfly/source/js</code> 下创建<code>custom.js</code> 写入如下代码：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">'DOMContentLoaded'</span>, <span class="keyword">function</span> (<span class="params"></span>) {</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">Pjax</span>) {</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Pjax</span>({</span><br><span class="line">      <span class="attr">elements</span>: <span class="string">'a'</span>,</span><br><span class="line">      <span class="attr">selectors</span>: [<span class="string">'title'</span>, <span class="string">'.content'</span>],</span><br><span class="line">      <span class="attr">cacheBust</span>: <span class="literal">false</span></span><br><span class="line">    });</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">'pjax:send'</span>, <span class="keyword">function</span> (<span class="params"></span>) {</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">'pjax-leave-active'</span>);</span><br><span class="line">    });</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">'pjax:complete'</span>, <span class="keyword">function</span> (<span class="params"></span>) {</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">'pjax-leave-active'</span>);</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">'pjax-enter-active'</span>);</span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) {</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">'pjax-enter-active'</span>);</span><br><span class="line">      }, <span class="number">500</span>);</span><br><span class="line">    });</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 切换主题的示例代码</span></span><br><span class="line">  <span class="keyword">const</span> toggleThemeButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">'toggle-theme'</span>);</span><br><span class="line">  toggleThemeButton.<span class="title function_">addEventListener</span>(<span class="string">'click'</span>, <span class="keyword">function</span> (<span class="params"></span>) {</span><br><span class="line">    <span class="keyword">const</span> htmlElement = <span class="variable language_">document</span>.<span class="property">documentElement</span>;</span><br><span class="line">    <span class="keyword">const</span> currentTheme = htmlElement.<span class="title function_">getAttribute</span>(<span class="string">'data-theme'</span>);</span><br><span class="line">    <span class="keyword">const</span> newTheme = currentTheme === <span class="string">'dark'</span> ? <span class="string">'light'</span> : <span class="string">'dark'</span>;</span><br><span class="line">    htmlElement.<span class="title function_">setAttribute</span>(<span class="string">'data-theme'</span>, newTheme);</span><br><span class="line">  });</span><br><span class="line">});</span><br></pre></td></tr></table></figure><p>最后，在 <code>/themes/butterfly/_config.yml</code> 中搜索<code>inject</code>，或者直接在外部的 <code>_config.butterfly.yml</code>里面添加如下代码：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel="stylesheet"</span> <span class="string">href="/css/custom.css"&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src="/js/custom.js"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h1 id="调试动画">调试动画</h1><p>调试的时候，可以直接在浏览器的 <code>F12</code>下修改动画效果，也就是 <code>cubic-bezier(0.22, 0.61, 0.36, 1)</code>贝塞尔曲线，可以直接看见图片：</p><p><img src="/img/202501/5.png" alt="Image 5"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly魔改1：首页大图预加载</title>
      <link href="/2025/01/03/Hexo/Butterfly/Custom/1/"/>
      <url>/2025/01/03/Hexo/Butterfly/Custom/1/</url>
      
        <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>众所周知，Butterfly的首页大图可以通过在 <code>_config.yml</code>文件中中配置 <code>index_img</code> 选项来实现。</p><p>但是如果你用的是GitHubPages来部署的，而你配置的首页大图的大小又有好几M，不算太小的话，有时候访问网站就会出现——<strong>先加载Butterfly框架出来，此时首页大图是蓝色的默认背景，然后才逐渐把你配置的大图加载出来</strong>——的这种情况。</p><p>我不喜欢这种情况，因为我希望别人一进网站就<strong>被我的首页大图震撼</strong>(bushi)，如果图片是慢慢加载出来的话就没有那种震撼感了，甚至说体验感比较一般。所以我准备对Butterfly的源码魔改一波。</p><p>以下是Butterfly官方网站的加载情况，可以看到这个图片逐渐加载的现象：</p><p><img src="/img/202501/1.png" alt="Image 1"></p><p><img src="/img/202501/2.png" alt="Image 2"></p><p><img src="/img/202501/3.png" alt="Image 3"></p><h1 id="方法1">方法1</h1><p>现在我们来魔改一下源代码，以实现图片预加载的功能。</p><p>打开 <code>themes/butterfly/layout/includes/layout.pug</code>这个文件，在 <code>body</code> 的最前面添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">body(style="visibility: hidden; overflow: hidden;")</span><br><span class="line"></span><br><span class="line">    !=partial('includes/loading/index', {}, {cache: true})</span><br></pre></td></tr></table></figure><p>然后还是这个文件，拉到文件最后，会看到如下两行：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">include ./rightside.pug</span><br><span class="line">include ./additional-js.pug</span><br></pre></td></tr></table></figure><p>在 <code>include ./additional-js.pug</code> 之前添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">script.</span><br><span class="line">    window.onload = function() {</span><br><span class="line">    document.body.style.visibility = 'hidden';</span><br><span class="line">    document.body.style.overflow = 'hidden';</span><br><span class="line">    var fullPageElement = document.querySelector('.full_page, .post-bg');</span><br><span class="line"></span><br><span class="line">    if (fullPageElement) {</span><br><span class="line">        //- console.log('Full-page element detected.');</span><br><span class="line"></span><br><span class="line">        var style = window.getComputedStyle(fullPageElement);</span><br><span class="line">        var backgroundImage = style.backgroundImage;</span><br><span class="line">        //- console.log('Background image:', backgroundImage);</span><br><span class="line"></span><br><span class="line">        // 提取 URL，去除前5个字符和后2个字符</span><br><span class="line">        var imageUrl = backgroundImage.slice(5, -2);</span><br><span class="line">        //- console.log('Background image URL:', imageUrl);</span><br><span class="line"></span><br><span class="line">        if (imageUrl &amp;&amp; imageUrl !== 'none') {</span><br><span class="line">        var img = new Image();</span><br><span class="line">        img.crossOrigin = "anonymous"; // 如果有跨域问题，尝试添加这行</span><br><span class="line"></span><br><span class="line">        img.onload = function() {</span><br><span class="line">            //- console.log('Background image loaded.');</span><br><span class="line">            document.body.style.visibility = 'visible';</span><br><span class="line">            document.body.style.overflow = 'auto';</span><br><span class="line">        };</span><br><span class="line"></span><br><span class="line">        img.onerror = function() {</span><br><span class="line">            //- console.error('Failed to load background image.');</span><br><span class="line">            document.body.style.visibility = 'visible';</span><br><span class="line">            document.body.style.overflow = 'auto';</span><br><span class="line">        };</span><br><span class="line"></span><br><span class="line">        // 确保图片路径是正确的</span><br><span class="line">        img.src = imageUrl;</span><br><span class="line">        } else {</span><br><span class="line">        //- console.log('No background image found.');</span><br><span class="line">        document.body.style.visibility = 'visible';</span><br><span class="line">        document.body.style.overflow = 'auto';</span><br><span class="line">        }</span><br><span class="line">    } else {</span><br><span class="line">        //- console.log('No full-page element detected.');</span><br><span class="line">        document.body.style.visibility = 'visible';</span><br><span class="line">        document.body.style.overflow = 'auto';</span><br><span class="line">    }</span><br><span class="line">    };</span><br></pre></td></tr></table></figure><p>代码中有 <code>console.log</code>用来调试，取消注释后编译本地浏览打开首页，按F12进到终端，如果看到如下调试信息，则说明功能添加成功：</p><p><img src="/img/202501/4.png" alt="Image 4"></p><p>其中，<code>.full_page</code> 是首页的检测元素, <code>.post-bg</code>是文章页面的检测元素，如下图所示：</p><p><img src="/img/202501/7.png" alt="Image 7"></p><p><img src="/img/202501/8.png" alt="Image 8"></p><h1 id="方法2推荐">方法2（推荐）</h1><p>打开 <code>themes/butterfly/layout/includes/layout.pug</code>这个文件，在 <code>body</code>的最前面添加如下代码（这个和方法1是一样的）：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">body(style="visibility: hidden; overflow: hidden;")</span><br><span class="line"></span><br><span class="line">    !=partial('includes/loading/index', {}, {cache: true})</span><br></pre></td></tr></table></figure><p>然后跟着<a href="https://diraw.top/2025/01/04/Hexo/Butterfly/Custom/0/">Butterfly魔改准备工作：文件管理魔改代码</a>完成准备。</p><p>最后把之前的代码写成一个函数如下所示，把以下代码添加在<code>custom.js</code> 最后（最外层）：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">checkBackgroundImage</span>(<span class="params"></span>) {</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">visibility</span> = <span class="string">'hidden'</span>;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">overflow</span> = <span class="string">'hidden'</span>;</span><br><span class="line">  <span class="keyword">var</span> fullPageElement = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">'.full_page, .post-bg'</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (fullPageElement) {</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'Full-page element detected.'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> style = <span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(fullPageElement);</span><br><span class="line">    <span class="keyword">var</span> backgroundImage = style.<span class="property">backgroundImage</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'Background image:'</span>, backgroundImage);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提取 URL，去除前5个字符和后2个字符</span></span><br><span class="line">    <span class="keyword">var</span> imageUrl = backgroundImage.<span class="title function_">slice</span>(<span class="number">5</span>, -<span class="number">2</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'Background image URL:'</span>, imageUrl);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (imageUrl &amp;&amp; imageUrl !== <span class="string">'none'</span>) {</span><br><span class="line">      <span class="keyword">var</span> img = <span class="keyword">new</span> <span class="title class_">Image</span>();</span><br><span class="line">      img.<span class="property">crossOrigin</span> = <span class="string">"anonymous"</span>; <span class="comment">// 如果有跨域问题，尝试添加这行</span></span><br><span class="line"></span><br><span class="line">      img.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) {</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'Background image loaded.'</span>);</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">visibility</span> = <span class="string">'visible'</span>;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">overflow</span> = <span class="string">'auto'</span>;</span><br><span class="line">      };</span><br><span class="line"></span><br><span class="line">      img.<span class="property">onerror</span> = <span class="keyword">function</span>(<span class="params"></span>) {</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">'Failed to load background image.'</span>);</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">visibility</span> = <span class="string">'visible'</span>;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">overflow</span> = <span class="string">'auto'</span>;</span><br><span class="line">      };</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 确保图片路径是正确的</span></span><br><span class="line">      img.<span class="property">src</span> = imageUrl;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'No background image found.'</span>);</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">visibility</span> = <span class="string">'visible'</span>;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">overflow</span> = <span class="string">'auto'</span>;</span><br><span class="line">    }</span><br><span class="line">  } <span class="keyword">else</span> {</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'No full-page element detected.'</span>);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">visibility</span> = <span class="string">'visible'</span>;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">overflow</span> = <span class="string">'auto'</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>最后在<code>document.addEventListener('DOMContentLoaded', function () { })</code>里面（如果没有就创建一个）<strong>最前面</strong>添加<code>checkBackgroundImage();</code> 即可，如下代码所示：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">'DOMContentLoaded'</span>, <span class="keyword">function</span> (<span class="params"></span>) {</span><br><span class="line">  <span class="comment">// 其他代码</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 初始检查背景图片</span></span><br><span class="line">  <span class="title function_">checkBackgroundImage</span>();</span><br><span class="line">});</span><br></pre></td></tr></table></figure><h1 id="注意">注意</h1><p>此篇教程只能实现刷新进入网站的时候执行功能，但是在网站页面之间进行跳转的时候却不起作用。</p><p>可能是如下原因：<br>1、单页应用（SPA）架构：页面之间的跳转实际上没有触发完整的页面加载，因此window.onload 事件不会再次触发。<br>2、浏览器缓存：浏览器可能缓存了图像或页面状态，导致 onload事件在页面跳转时不被触发。<br>3、JavaScript 框架的路由：使用 JavaScript框架进行路由时，页面跳转通常不会刷新整个页面。</p><p>搞了很久还是不行，以后再来吧。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo报错ssh: connect to host github.com port 22: Connection timed out解决办法</title>
      <link href="/2025/01/03/Hexo/Error/1/"/>
      <url>/2025/01/03/Hexo/Error/1/</url>
      
        <content type="html"><![CDATA[<p><code>hexo d</code> 报错ssh: connect to host github.com port 22:Connection timed out</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh: connect to host github.com port 22: Connection timed out</span><br><span class="line">fatal: Could not <span class="built_in">read</span> from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br><span class="line">FATAL Something<span class="string">'s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">Error: Spawn failed</span></span><br><span class="line"><span class="string">    at ChildProcess.&lt;anonymous&gt; (E:\Blog\node_modules\hexo-deployer-git\node_modules\hexo-util\lib\spawn.js:51:21)</span></span><br><span class="line"><span class="string">    at ChildProcess.emit (events.js:400:28)</span></span><br><span class="line"><span class="string">    at ChildProcess.cp.emit (E:\Blog\node_modules\cross-spawn\lib\enoent.js:34:29)</span></span><br><span class="line"><span class="string">    at Process.ChildProcess._handle.onexit (internal/child_process.js:285:12)  </span></span><br><span class="line"><span class="string">PS E:\Blog&gt; </span></span><br></pre></td></tr></table></figure><p>在命令行直接输入 <code>ssh -T git@github.com</code>连接GitHub，返回：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\craft&gt;ssh -T git@github.com</span><br><span class="line">ssh: connect to host github.com port 22: Connection timed out</span><br></pre></td></tr></table></figure></p><p>如果 <code>hexo d</code>以前都是好的，今天突然抽风了，那应该不是ssh密钥的问题，而是端口被防火墙禁止访问了，我们尝试修改<code>~/.ssh/config</code> 使用443端口来访问：</p><ol type="1"><li>命令行 <code>cd %USERPROFILE%\.ssh</code></li><li><code>notepad config</code> 编辑 config 文件</li><li>在 notepad 中，输入以下内容：</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">  Hostname ssh.github.com</span><br><span class="line">  Port 443</span><br></pre></td></tr></table></figure><p>然后，在命令行输入 <code>ssh -T git@github.com</code> 返回：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\craft&gt;ssh -T git@github.com</span><br><span class="line">Hi Diraw! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure></p><p>然后再 <code>hexo d</code> 应该就没问题了。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly报错TypeError: coverVal.indexOf is not a function解决办法</title>
      <link href="/2025/01/02/Hexo/Butterfly/Error/1/"/>
      <url>/2025/01/02/Hexo/Butterfly/Error/1/</url>
      
        <content type="html"><![CDATA[<p>魔改了一下Butterfly的源代码之后 <code>hexo g</code>出现如下报错：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">TypeError: coverVal.indexOf is not a <span class="keyword">function</span></span><br><span class="line">    at Hexo.&lt;anonymous&gt; (E:\Blog\themes\butterfly\scripts\filters\random_cover.js:15:30)</span><br><span class="line">    at Hexo.tryCatcher (E:\Blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Hexo.&lt;anonymous&gt; (E:\Blog\node_modules\bluebird\js\release\method.js:15:34)</span><br><span class="line">    at E:\Blog\node_modules\hexo\dist\extend\filter.js:58:67</span><br><span class="line">    at tryCatcher (E:\Blog\node_modules\bluebird\js\release\util.js:16:23)     </span><br><span class="line">    at Object.gotValue (E:\Blog\node_modules\bluebird\js\release\reduce.js:166:18)</span><br><span class="line">    at Object.gotAccum (E:\Blog\node_modules\bluebird\js\release\reduce.js:155:25)</span><br><span class="line">    at Object.tryCatcher (E:\Blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (E:\Blog\node_modules\bluebird\js\release\promise.js:547:31)</span><br><span class="line">    at Promise._settlePromise (E:\Blog\node_modules\bluebird\js\release\promise.js:604:18)</span><br><span class="line">    at Promise._settlePromise0 (E:\Blog\node_modules\bluebird\js\release\promise.js:649:10)</span><br><span class="line">    at Promise._settlePromises (E:\Blog\node_modules\bluebird\js\release\promise.js:729:18)</span><br><span class="line">    at _drainQueueStep (E:\Blog\node_modules\bluebird\js\release\async.js:93:12)</span><br><span class="line">    at _drainQueue (E:\Blog\node_modules\bluebird\js\release\async.js:86:9)    </span><br><span class="line">    at Async._drainQueues (E:\Blog\node_modules\bluebird\js\release\async.js:102:5)</span><br><span class="line">    at Immediate.Async.drainQueues [as _onImmediate] (E:\Blog\node_modules\bluebird\js\release\async.js:15:14)</span><br><span class="line">    at processImmediate (internal/timers.js:464:21)</span><br></pre></td></tr></table></figure><p>打开 <code>.\themes\butterfly\scripts\filters\random_cover.js</code>文件如下：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Butterfly</span></span><br><span class="line"><span class="comment"> * ramdom cover</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">'use strict'</span></span><br><span class="line"></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">'before_post_render'</span>, <span class="function"><span class="params">data</span> =&gt;</span> {</span><br><span class="line">  <span class="keyword">const</span> imgTestReg = <span class="regexp">/\.(png|jpe?g|gif|svg|webp)(\?.*)?$/i</span></span><br><span class="line">  <span class="keyword">let</span> { <span class="attr">cover</span>: coverVal, <span class="attr">top_img</span>: topImg } = data</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Add path to top_img and cover if post_asset_folder is enabled</span></span><br><span class="line">  <span class="keyword">if</span> (hexo.<span class="property">config</span>.<span class="property">post_asset_folder</span>) {</span><br><span class="line">    <span class="keyword">if</span> (topImg &amp;&amp; topImg.<span class="title function_">indexOf</span>(<span class="string">'/'</span>) === -<span class="number">1</span> &amp;&amp; imgTestReg.<span class="title function_">test</span>(topImg)) data.<span class="property">top_img</span> = <span class="string">`<span class="subst">${data.path}</span><span class="subst">${topImg}</span>`</span></span><br><span class="line">    <span class="keyword">if</span> (coverVal &amp;&amp; coverVal.<span class="title function_">indexOf</span>(<span class="string">'/'</span>) === -<span class="number">1</span> &amp;&amp; imgTestReg.<span class="title function_">test</span>(coverVal)) data.<span class="property">cover</span> = <span class="string">`<span class="subst">${data.path}</span><span class="subst">${coverVal}</span>`</span></span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">randomCoverFn</span> = (<span class="params"></span>) =&gt; {</span><br><span class="line">    <span class="keyword">const</span> { <span class="attr">cover</span>: { <span class="attr">default_cover</span>: defaultCover } } = hexo.<span class="property">theme</span>.<span class="property">config</span></span><br><span class="line">    <span class="keyword">if</span> (!defaultCover) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="title class_">Array</span>.<span class="title function_">isArray</span>(defaultCover)) <span class="keyword">return</span> defaultCover</span><br><span class="line">    <span class="keyword">const</span> num = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * defaultCover.<span class="property">length</span>)</span><br><span class="line">    <span class="keyword">return</span> defaultCover[num]</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (coverVal === <span class="literal">false</span>) <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line">  <span class="comment">// If cover is not set, use random cover</span></span><br><span class="line">  <span class="keyword">if</span> (!coverVal) {</span><br><span class="line">    <span class="keyword">const</span> randomCover = <span class="title function_">randomCoverFn</span>()</span><br><span class="line">    data.<span class="property">cover</span> = randomCover</span><br><span class="line">    coverVal = randomCover <span class="comment">// update coverVal</span></span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (coverVal &amp;&amp; (coverVal.<span class="title function_">indexOf</span>(<span class="string">'//'</span>) !== -<span class="number">1</span> || imgTestReg.<span class="title function_">test</span>(coverVal))) {</span><br><span class="line">    data.<span class="property">cover_type</span> = <span class="string">'img'</span></span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> data</span><br><span class="line">})</span><br></pre></td></tr></table></figure><p>将文件内容修改为：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Butterfly</span></span><br><span class="line"><span class="comment"> * random cover</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">'use strict'</span></span><br><span class="line"></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">'before_post_render'</span>, <span class="function"><span class="params">data</span> =&gt;</span> {</span><br><span class="line">  <span class="keyword">const</span> imgTestReg = <span class="regexp">/\.(png|jpe?g|gif|svg|webp)(\?.*)?$/i</span></span><br><span class="line">  <span class="keyword">let</span> { <span class="attr">cover</span>: coverVal, <span class="attr">top_img</span>: topImg } = data</span><br><span class="line">  <span class="keyword">const</span> postAssetFolder = hexo.<span class="property">config</span>.<span class="property">post_asset_folder</span></span><br><span class="line">  <span class="keyword">const</span> defaultCover = hexo.<span class="property">theme</span>.<span class="property">config</span>.<span class="property">cover</span>.<span class="property">default_cover</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Cache random cover if needed</span></span><br><span class="line">  <span class="keyword">let</span> randomCover;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">randomCoverFn</span> = (<span class="params"></span>) =&gt; {</span><br><span class="line">    <span class="keyword">if</span> (!defaultCover) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="title class_">Array</span>.<span class="title function_">isArray</span>(defaultCover)) <span class="keyword">return</span> defaultCover</span><br><span class="line">    <span class="keyword">if</span> (!randomCover) {</span><br><span class="line">      <span class="keyword">const</span> num = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * defaultCover.<span class="property">length</span>)</span><br><span class="line">      randomCover = defaultCover[num]</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> randomCover</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Add path to top_img and cover if post_asset_folder is enabled</span></span><br><span class="line">  <span class="keyword">if</span> (postAssetFolder) {</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> topImg === <span class="string">'string'</span> &amp;&amp; topImg.<span class="title function_">indexOf</span>(<span class="string">'/'</span>) === -<span class="number">1</span> &amp;&amp; imgTestReg.<span class="title function_">test</span>(topImg)) {</span><br><span class="line">      data.<span class="property">top_img</span> = <span class="string">`<span class="subst">${data.path}</span><span class="subst">${topImg}</span>`</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> coverVal === <span class="string">'string'</span> &amp;&amp; coverVal.<span class="title function_">indexOf</span>(<span class="string">'/'</span>) === -<span class="number">1</span> &amp;&amp; imgTestReg.<span class="title function_">test</span>(coverVal)) {</span><br><span class="line">      data.<span class="property">cover</span> = <span class="string">`<span class="subst">${data.path}</span><span class="subst">${coverVal}</span>`</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (coverVal === <span class="literal">false</span>) <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line">  <span class="comment">// If cover is not set, use random cover</span></span><br><span class="line">  <span class="keyword">if</span> (!coverVal) {</span><br><span class="line">    <span class="keyword">const</span> randomCover = <span class="title function_">randomCoverFn</span>()</span><br><span class="line">    data.<span class="property">cover</span> = randomCover</span><br><span class="line">    coverVal = randomCover <span class="comment">// update coverVal</span></span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> coverVal === <span class="string">'string'</span> &amp;&amp; (coverVal.<span class="title function_">indexOf</span>(<span class="string">'//'</span>) !== -<span class="number">1</span> || imgTestReg.<span class="title function_">test</span>(coverVal))) {</span><br><span class="line">    data.<span class="property">cover_type</span> = <span class="string">'img'</span></span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> data</span><br><span class="line">})</span><br></pre></td></tr></table></figure><p>做的改动有：<br>1. <strong>变量声明优化</strong>：将 postAssetFolder 和 defaultCover单独提取出来，避免多次访问配置。<br>2. <strong>缓存随机封面</strong>：添加了 randomCover变量，用于缓存随机封面，避免重复计算。<br>3. <strong>类型检查</strong>：在使用 indexOf 之前，增加了对 topImg 和coverVal 的类型检查，确保它们是字符串。<br>4. <strong>逻辑优化</strong>：在 randomCoverFn 中，增加了对 randomCover的缓存检查，避免多次随机选择。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
