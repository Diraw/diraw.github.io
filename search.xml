<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Butterfly魔改1：首页大图预缓存</title>
      <link href="/2025/01/03/Hexo/Butterfly/Change/1/"/>
      <url>/2025/01/03/Hexo/Butterfly/Change/1/</url>
      
        <content type="html"><![CDATA[<h1 id="问题">问题</h1><p>Butterfly的首页大图可以通过在 <code>_config.yml</code> 文件中中配置<code>index_img</code> 选项来实现。但是如果你用的是GitHubPages来部署的，而你配置的首页大图的大小又有好几M，不算太小的话，有时候访问网站就会出现——先加载Butterfly框架出来，此时首页大图是蓝色的默认背景，然后才慢慢把你配置的大图加载出来——的这种情况。</p><p>我不喜欢这种情况，因为我希望别人一进网站就<strong>被我的首页大图震撼</strong>(bushi)，如果图片是慢慢加载出来的话就没有那种震撼感了，甚至说体验感比较一般。所以我准备对Butterfly的源码魔改一波。</p><p>以下是Butterfly官方网站的加载情况，可以很明白的看到这个图片慢慢加载的现象：</p><p><img src="/img/202501/1.png" alt="Image 1"></p><p><img src="/img/202501/2.png" alt="Image 2"></p><p><img src="/img/202501/3.png" alt="Image 3"></p><h1 id="步骤">步骤</h1><p>现在我们来魔改一下源代码，以实现图片预加载的功能。</p><p>首先，打开<code>themes/butterfly/source/css/_global/index.styl</code>这个文件，搜索 <code>body</code>（应该在第42行），可以看到：</p><figure class="highlight styl"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span></span><br><span class="line">  <span class="attribute">position</span>: relative</span><br><span class="line">  <span class="attribute">overflow-y</span>: scroll</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">100%</span></span><br></pre></td></tr></table></figure><p>在 <code>body</code> 这一栏，添加 <code>visibility hidden</code> 和<code>overflow hidden</code> 这两项，如下所示：</p><figure class="highlight styl"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span></span><br><span class="line">  <span class="attribute">visibility</span> hidden</span><br><span class="line">  <span class="attribute">overflow</span> hidden</span><br><span class="line">  <span class="attribute">position</span>: relative</span><br><span class="line">  <span class="attribute">overflow-y</span>: scroll</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">100%</span></span><br></pre></td></tr></table></figure><p>然后，打开 <code>themes/butterfly/layout/includes/layout.pug</code>这个文件，拉到文件最后，会看到如下两行：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">include ./rightside.pug</span><br><span class="line">include ./additional-js.pug</span><br></pre></td></tr></table></figure><p>在 <code>include ./additional-js.pug</code> 之前添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">script.</span><br><span class="line">    window.onload = function() {</span><br><span class="line">    var fullPageElement = document.querySelector('.full_page');</span><br><span class="line"></span><br><span class="line">    if (fullPageElement) {</span><br><span class="line">        //- console.log('Full-page element detected.');</span><br><span class="line"></span><br><span class="line">        var style = window.getComputedStyle(fullPageElement);</span><br><span class="line">        var backgroundImage = style.backgroundImage;</span><br><span class="line">        //- console.log('Background image:', backgroundImage);</span><br><span class="line"></span><br><span class="line">        // 提取 URL，去除前5个字符和后2个字符</span><br><span class="line">        var imageUrl = backgroundImage.slice(5, -2);</span><br><span class="line">        //- console.log('Background image URL:', imageUrl);</span><br><span class="line"></span><br><span class="line">        if (imageUrl &amp;&amp; imageUrl !== 'none') {</span><br><span class="line">        var img = new Image();</span><br><span class="line">        img.crossOrigin = "anonymous"; // 如果有跨域问题，尝试添加这行</span><br><span class="line"></span><br><span class="line">        img.onload = function() {</span><br><span class="line">            //- console.log('Background image loaded.');</span><br><span class="line">            document.body.style.visibility = 'visible';</span><br><span class="line">            document.body.style.overflow = 'auto';</span><br><span class="line">        };</span><br><span class="line"></span><br><span class="line">        img.onerror = function() {</span><br><span class="line">            //- console.error('Failed to load background image.');</span><br><span class="line">            document.body.style.visibility = 'visible';</span><br><span class="line">            document.body.style.overflow = 'auto';</span><br><span class="line">        };</span><br><span class="line"></span><br><span class="line">        // 确保图片路径是正确的</span><br><span class="line">        img.src = imageUrl;</span><br><span class="line">        } else {</span><br><span class="line">        //- console.log('No background image found.');</span><br><span class="line">        document.body.style.visibility = 'visible';</span><br><span class="line">        document.body.style.overflow = 'auto';</span><br><span class="line">        }</span><br><span class="line">    } else {</span><br><span class="line">        //- console.log('No full-page element detected.');</span><br><span class="line">        document.body.style.visibility = 'visible';</span><br><span class="line">        document.body.style.overflow = 'auto';</span><br><span class="line">    }</span><br><span class="line">    };</span><br></pre></td></tr></table></figure><p>代码中有 <code>console.log</code>用来调试，取消注释后编译本地浏览打开首页，按F12进到终端，如果看到如下调试信息，则说明功能添加成功：</p><p><img src="/img/202501/4.png" alt="Image 4"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly报错TypeError: coverVal.indexOf is not a function</title>
      <link href="/2025/01/02/Hexo/Butterfly/Error/1/"/>
      <url>/2025/01/02/Hexo/Butterfly/Error/1/</url>
      
        <content type="html"><![CDATA[<p>魔改了一下Butterfly的源代码之后 <code>hexo g</code>出现如下报错：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">TypeError: coverVal.indexOf is not a <span class="keyword">function</span></span><br><span class="line">    at Hexo.&lt;anonymous&gt; (E:\Blog\themes\butterfly\scripts\filters\random_cover.js:15:30)</span><br><span class="line">    at Hexo.tryCatcher (E:\Blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Hexo.&lt;anonymous&gt; (E:\Blog\node_modules\bluebird\js\release\method.js:15:34)</span><br><span class="line">    at E:\Blog\node_modules\hexo\dist\extend\filter.js:58:67</span><br><span class="line">    at tryCatcher (E:\Blog\node_modules\bluebird\js\release\util.js:16:23)     </span><br><span class="line">    at Object.gotValue (E:\Blog\node_modules\bluebird\js\release\reduce.js:166:18)</span><br><span class="line">    at Object.gotAccum (E:\Blog\node_modules\bluebird\js\release\reduce.js:155:25)</span><br><span class="line">    at Object.tryCatcher (E:\Blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (E:\Blog\node_modules\bluebird\js\release\promise.js:547:31)</span><br><span class="line">    at Promise._settlePromise (E:\Blog\node_modules\bluebird\js\release\promise.js:604:18)</span><br><span class="line">    at Promise._settlePromise0 (E:\Blog\node_modules\bluebird\js\release\promise.js:649:10)</span><br><span class="line">    at Promise._settlePromises (E:\Blog\node_modules\bluebird\js\release\promise.js:729:18)</span><br><span class="line">    at _drainQueueStep (E:\Blog\node_modules\bluebird\js\release\async.js:93:12)</span><br><span class="line">    at _drainQueue (E:\Blog\node_modules\bluebird\js\release\async.js:86:9)    </span><br><span class="line">    at Async._drainQueues (E:\Blog\node_modules\bluebird\js\release\async.js:102:5)</span><br><span class="line">    at Immediate.Async.drainQueues [as _onImmediate] (E:\Blog\node_modules\bluebird\js\release\async.js:15:14)</span><br><span class="line">    at processImmediate (internal/timers.js:464:21)</span><br></pre></td></tr></table></figure><p>打开 <code>.\themes\butterfly\scripts\filters\random_cover.js</code>文件如下：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Butterfly</span></span><br><span class="line"><span class="comment"> * ramdom cover</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">'use strict'</span></span><br><span class="line"></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">'before_post_render'</span>, <span class="function"><span class="params">data</span> =&gt;</span> {</span><br><span class="line">  <span class="keyword">const</span> imgTestReg = <span class="regexp">/\.(png|jpe?g|gif|svg|webp)(\?.*)?$/i</span></span><br><span class="line">  <span class="keyword">let</span> { <span class="attr">cover</span>: coverVal, <span class="attr">top_img</span>: topImg } = data</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Add path to top_img and cover if post_asset_folder is enabled</span></span><br><span class="line">  <span class="keyword">if</span> (hexo.<span class="property">config</span>.<span class="property">post_asset_folder</span>) {</span><br><span class="line">    <span class="keyword">if</span> (topImg &amp;&amp; topImg.<span class="title function_">indexOf</span>(<span class="string">'/'</span>) === -<span class="number">1</span> &amp;&amp; imgTestReg.<span class="title function_">test</span>(topImg)) data.<span class="property">top_img</span> = <span class="string">`<span class="subst">${data.path}</span><span class="subst">${topImg}</span>`</span></span><br><span class="line">    <span class="keyword">if</span> (coverVal &amp;&amp; coverVal.<span class="title function_">indexOf</span>(<span class="string">'/'</span>) === -<span class="number">1</span> &amp;&amp; imgTestReg.<span class="title function_">test</span>(coverVal)) data.<span class="property">cover</span> = <span class="string">`<span class="subst">${data.path}</span><span class="subst">${coverVal}</span>`</span></span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">randomCoverFn</span> = (<span class="params"></span>) =&gt; {</span><br><span class="line">    <span class="keyword">const</span> { <span class="attr">cover</span>: { <span class="attr">default_cover</span>: defaultCover } } = hexo.<span class="property">theme</span>.<span class="property">config</span></span><br><span class="line">    <span class="keyword">if</span> (!defaultCover) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="title class_">Array</span>.<span class="title function_">isArray</span>(defaultCover)) <span class="keyword">return</span> defaultCover</span><br><span class="line">    <span class="keyword">const</span> num = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * defaultCover.<span class="property">length</span>)</span><br><span class="line">    <span class="keyword">return</span> defaultCover[num]</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (coverVal === <span class="literal">false</span>) <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line">  <span class="comment">// If cover is not set, use random cover</span></span><br><span class="line">  <span class="keyword">if</span> (!coverVal) {</span><br><span class="line">    <span class="keyword">const</span> randomCover = <span class="title function_">randomCoverFn</span>()</span><br><span class="line">    data.<span class="property">cover</span> = randomCover</span><br><span class="line">    coverVal = randomCover <span class="comment">// update coverVal</span></span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (coverVal &amp;&amp; (coverVal.<span class="title function_">indexOf</span>(<span class="string">'//'</span>) !== -<span class="number">1</span> || imgTestReg.<span class="title function_">test</span>(coverVal))) {</span><br><span class="line">    data.<span class="property">cover_type</span> = <span class="string">'img'</span></span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> data</span><br><span class="line">})</span><br></pre></td></tr></table></figure><p>将文件内容修改为：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Butterfly</span></span><br><span class="line"><span class="comment"> * random cover</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">'use strict'</span></span><br><span class="line"></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">'before_post_render'</span>, <span class="function"><span class="params">data</span> =&gt;</span> {</span><br><span class="line">  <span class="keyword">const</span> imgTestReg = <span class="regexp">/\.(png|jpe?g|gif|svg|webp)(\?.*)?$/i</span></span><br><span class="line">  <span class="keyword">let</span> { <span class="attr">cover</span>: coverVal, <span class="attr">top_img</span>: topImg } = data</span><br><span class="line">  <span class="keyword">const</span> postAssetFolder = hexo.<span class="property">config</span>.<span class="property">post_asset_folder</span></span><br><span class="line">  <span class="keyword">const</span> defaultCover = hexo.<span class="property">theme</span>.<span class="property">config</span>.<span class="property">cover</span>.<span class="property">default_cover</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Cache random cover if needed</span></span><br><span class="line">  <span class="keyword">let</span> randomCover;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">randomCoverFn</span> = (<span class="params"></span>) =&gt; {</span><br><span class="line">    <span class="keyword">if</span> (!defaultCover) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="title class_">Array</span>.<span class="title function_">isArray</span>(defaultCover)) <span class="keyword">return</span> defaultCover</span><br><span class="line">    <span class="keyword">if</span> (!randomCover) {</span><br><span class="line">      <span class="keyword">const</span> num = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * defaultCover.<span class="property">length</span>)</span><br><span class="line">      randomCover = defaultCover[num]</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> randomCover</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Add path to top_img and cover if post_asset_folder is enabled</span></span><br><span class="line">  <span class="keyword">if</span> (postAssetFolder) {</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> topImg === <span class="string">'string'</span> &amp;&amp; topImg.<span class="title function_">indexOf</span>(<span class="string">'/'</span>) === -<span class="number">1</span> &amp;&amp; imgTestReg.<span class="title function_">test</span>(topImg)) {</span><br><span class="line">      data.<span class="property">top_img</span> = <span class="string">`<span class="subst">${data.path}</span><span class="subst">${topImg}</span>`</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> coverVal === <span class="string">'string'</span> &amp;&amp; coverVal.<span class="title function_">indexOf</span>(<span class="string">'/'</span>) === -<span class="number">1</span> &amp;&amp; imgTestReg.<span class="title function_">test</span>(coverVal)) {</span><br><span class="line">      data.<span class="property">cover</span> = <span class="string">`<span class="subst">${data.path}</span><span class="subst">${coverVal}</span>`</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (coverVal === <span class="literal">false</span>) <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line">  <span class="comment">// If cover is not set, use random cover</span></span><br><span class="line">  <span class="keyword">if</span> (!coverVal) {</span><br><span class="line">    <span class="keyword">const</span> randomCover = <span class="title function_">randomCoverFn</span>()</span><br><span class="line">    data.<span class="property">cover</span> = randomCover</span><br><span class="line">    coverVal = randomCover <span class="comment">// update coverVal</span></span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> coverVal === <span class="string">'string'</span> &amp;&amp; (coverVal.<span class="title function_">indexOf</span>(<span class="string">'//'</span>) !== -<span class="number">1</span> || imgTestReg.<span class="title function_">test</span>(coverVal))) {</span><br><span class="line">    data.<span class="property">cover_type</span> = <span class="string">'img'</span></span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> data</span><br><span class="line">})</span><br></pre></td></tr></table></figure><p>做的改动有：<br>1. <strong>变量声明优化</strong>：将 postAssetFolder 和 defaultCover单独提取出来，避免多次访问配置。<br>2. <strong>缓存随机封面</strong>：添加了 randomCover变量，用于缓存随机封面，避免重复计算。<br>3. <strong>类型检查</strong>：在使用 indexOf 之前，增加了对 topImg 和coverVal 的类型检查，确保它们是字符串。<br>4. <strong>逻辑优化</strong>：在 randomCoverFn 中，增加了对 randomCover的缓存检查，避免多次随机选择。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
